# Prototype Role Definition as of Build 632

gui.area.default = ListUsers

# No implicit tags, show untagged objects
#default.semTags = ""
#default.langTags = ""

# No implicit tags, hide untagged ojects
#default.semTags = "<>"
#default.langTags = "<>"

# Show only obects tagged wit these tags
#default.semTags = "tag1 tag2"
#default.langTags = "de"

# Note: More specific area.XXX.semTags/langTags below, same rules

#
# Channels
#
gui.areas[] = ListChannels
    area.ListChannels.Statistics = true
   #area.ListChannels.semTags = ""
   #area.ListChannels.langTags = ""

gui.areas[] = EditChannels
    area.EditChannels.Create = true
    area.EditChannels.Delete = true
    area.EditChannels.EditTags = $(true, unless default.semTags / default.langTags are set)

gui.areas[] = ListVChannels
    area.ListVChannels.Statistics = true
   #area.ListVChannels.semTags = ""
   #area.ListVChannels.langTags = ""

gui.areas[] = EditVChannels
    area.EditVChannels.Create = true
    area.EditVChannels.Delete = true
    area.EditVChannels.EditTags = $(true, unless default.semTags / default.langTags are set)

#
# Entries
#
gui.areas[] = ListUsers
    area.ListUsers.Query = true
    area.ListUsers.Export = true
    area.ListUsers.Import = true
   #area.ListUsers.columns{.1...} # See below

gui.areas[] = VisualQuery
gui.areas[] = ShowUser
    area.ShowUser.Channels = true
    area.ShowUser.VChannels = true
    area.ShowUser.Tracking = true
   #area.ShowUser.icons = "{UserIcons:*}"
   #area.ShowUser.icons{.$lang} = "{UserIcons:icon1:icon2}"
   #area.ShowUser.title.display{.$lang} = "{nice:salut} {firstname} {lastname}"
   #area.ShowUser.Overview.controller = {rest controller name}
   #area.ShowUser.Style = "IconBar"
   #area.ShowUser.Wizard = {wizard controller name}

gui.areas[] = EditUser
    area.EditUser.Channels = true
    area.EditUser.Notify = $(Notify.Standard || Notify.Custom)
    area.EditUser.Notify.Standard = true
    area.EditUser.Notify.Custom = true
    area.EditUser.Delete = true
    area.EditUser.EntryType.X = true
   #area.EditUser.Wizard = {wizard controller name}


gui.areas[] = CreateUser
    area.CreateUser.$entryType = true # For each entry type

#
# Newsletter
#
gui.areas[] = SendNewsletter
    area.SendNewsletter.EditTags = $(true, unless default.semTags / default.langTags are set)

gui.areas[] = NewsletterQueue
    # Change individual newsletters
    area.NewsletterQueue.reschedule = true
    # Globally lock the queue, implies .reschedule
    area.NewsletterQueue.control = true

gui.areas[] = NewsletterGroups
    area.NewsletterGroups.Create = true
    area.NewsletterGroups.Delete = true
    area.NewsletterGroups.EditTags = $(true, unless default.semTags / default.langTags are set)
   #area.NewsletterGroups.semTags = ""
   #area.NewsletterGroups.langTags = ""


gui.areas[] = NewsletterArchive
    area.NewsletterArchive.TrackingFilter = true
    area.NewsletterArchive.TrackingFilter.ToChannel = true
    area.NewsletterArchive.Delete = true
    area.NewsletterArchive.Edit = true
   #area.NewsletterArchive.tags = "tag1 tag2 tag3"
   # OR
   #area.NewsletterArchive.tags.1 = "tag 1"
   #area.NewsletterArchive.tags.2 = "tag 2"

#
# Statistics
#
gui.areas[] = Statistics
    area.Statistics.Total = true
    area.Statistics.Channels = true
    area.Statistics.VChannels = true
    area.Statistics.CustomStats = true
   # For custom statistics
   #area.Statistics.semTags = ""
   #area.Statistics.langTags = ""

#
# Dashboard
#
gui.areas[] = Dashboard

#
# Extras
#
gui.areas[] = Notifications
    area.Notifications.Create = true
    area.Notifications.Delete = true
    area.Notifications.EditTags = $(true, unless default.semTags / default.langTags are set)
   #area.Notifications.semTags = ""
   #area.Notifications.langTags = ""

gui.areas[] = Jobs
    area.Jobs.Create = true
    area.Jobs.Delete = true
    area.Jobs.Edit = true
    area.Jobs.EditTags = $(true, unless default.semTags / default.langTags are set)
    area.Jobs.EditCallback = true
   #area.Jobs.semTags = ""
   #area.Jobs.langTags = ""

gui.areas[] = ListModules
    area.ListModules.$module = false # For each registered module

gui.areas[] = SystemDashboard
gui.areas[] = MailRelays
gui.areas[] = LogFile

gui.areas[] = PluginInstances
    area.PluginInstances.Edit = true
    area.PluginInstances.Create = true
    area.PluginInstances.Delete = true
    area.PluginInstances.EditTags = $(true, unless default.semTags / default.langTags are set)
   #area.PluginInstances.semTags = ""
   #area.PluginInstances.langTags = ""

gui.areas[] = RestProxy
gui.areas[] = History
gui.areas[] = ApiToken

# gui.areas[] = IncomingMailArchive   # erfordert cmsbs.bounce.IncomingMailArchive = true

#
# Help
#
gui.areas[] = Help


#
# Add-Ons / Apps
#
gui.areas[] = AddOn.de.pinuts.cmsbs.newsletter
gui.areas[] = AddOn.de.pinuts.webnewsletterarchive
#gui.areas[] = AddOn.de.pinuts.cmsbs.contactform
gui.areas[] = AddOn.de.pinuts.cmsbs.mailbacklog
gui.areas[] = AddOn.de.pinuts.cmsbs.querycost
gui.areas[] = AddOn.de.pinuts.cors

#
# Global Modifiers:
#
#area.*.EditTags = true

#
# Restrict visibility of Entries
#
#user.query = "city = 'Berlin'"

#
# Restrict visibility of Attribute Groups
#  (*group inherited from global configuration, group defined here)
attribute.groups = "*std_personal *std_contact group"
# grp.{group}.title.{de|en}
# grp.{group}.show = {true | false}
# grp.{group}.showForNew = {true | false}
# grp.{group}.ignore = {true | false}
# grp.{group}.showIf
# grp.{group}.hideIf


#
# Modify individual attributes
#
# attr.{attribute}.title{.$lang}
# attr.{attribute}.default
# attr.{attribute}.values{.1...}
# attr.{attribute}.value.{wert}{.$lang}
# attr.{attribute}.members{.1...}

# TABLE attributes
# attr.{attribute}.members{.1...}

# REFERENCE attributes
# attr.{attribute}.reference.selector = {text | dropdown}
# attr.{attribute}.reference.selectorQuery
# attr.{attribute}.reference.selectorSort
# attr.{attribute}.reference.displayValue{.$lang}

# HTML attributes
# attr.{attribute}.editor.config
# attr.{attribute}.editor.mode = {default | inline}

#
# area.ListUsers.columns - 
# (*Column inherited from global configuration, column defined here)
area.ListUsers.columns = "*Salut *Firstname *Lastname *Email *Icons"

# area.ListUsers.column.{column}.title{.$lang}
# area.ListUsers.column.{column}.display{.$lang}
# area.ListUsers.column.{column}.tooltip{.$lang}
# area.ListUsers.column.{column}.width
# area.ListUsers.column.{column}.nowrap = {true | false}

